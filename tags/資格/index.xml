<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>資格 on Note To Self ~One Step At A Time~</title>
    <link>https://kkawazoe.github.io/tags/%E8%B3%87%E6%A0%BC/</link>
    <description>Recent content in 資格 on Note To Self ~One Step At A Time~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Mon, 05 Dec 2022 13:00:00 +0900</lastBuildDate><atom:link href="https://kkawazoe.github.io/tags/%E8%B3%87%E6%A0%BC/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ruby Gold 認定試験 Ver 3 への道 その5</title>
      <link>https://kkawazoe.github.io/blog/2022/12/05/road-to-ruby-gold-ver-3-part5/</link>
      <pubDate>Mon, 05 Dec 2022 13:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2022/12/05/road-to-ruby-gold-ver-3-part5/</guid>
      <description>Ruby Gold 認定試験の Ver 3 の勉強時に学んだことを備忘録として残しておく
[前回までの記事]
Ruby Gold 認定試験 Ver 3 への道 Ruby Gold 認定試験 Ver 3 への道 その2 Ruby Gold 認定試験 Ver 3 への道 その3 Ruby Gold 認定試験 Ver 3 への道 その4 受験結果 無事に合格した
前回、 ver 2 受験時と難易度的には同じくらいだったように思う
なので、基本的にはオブジェクト指向周りを再確認する
3 系から追加された 「hash 明示(**hash)」などはリリースノートで確認して置いた方が良いが 2.2 〜 2.7 系での変更点についても押さえておくとより良いと思う
Github NEWS.md
リリースノート
勉強に使用したもの 公式の模擬問題
基本的には、上記をやって該当のコードを自分でコーディングしながら、色々変更して動作確認するのが一番良さそう </description>
    </item>
    
    <item>
      <title>Ruby Gold 認定試験 Ver 3 への道 その4</title>
      <link>https://kkawazoe.github.io/blog/2022/12/01/road-to-ruby-gold-ver-3-part4/</link>
      <pubDate>Thu, 01 Dec 2022 13:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2022/12/01/road-to-ruby-gold-ver-3-part4/</guid>
      <description>Ruby Gold 認定試験の Ver 3 の勉強時に学んだことを備忘録として残しておく
[前回までの記事]
Ruby Gold 認定試験 Ver 3 への道 Ruby Gold 認定試験 Ver 3 への道 その2 Ruby Gold 認定試験 Ver 3 への道 その3 環境 ruby: 3.1.2 キーワード引数 キーワード引数で a: のようなデフォルト値を指定しない場合、構文エラーにはならないが、呼び出し時に指定しなかった場合に ArgumentError になる
class KeywordArgument def foo(a:, b: &amp;#39;bbb&amp;#39;) puts &amp;#34;a: #{a}, b: #{b}&amp;#34; end end keyword_argument = KeywordArgument.new keyword_argument.foo(a: &amp;#39;aaa&amp;#39;, b: &amp;#39;BBB&amp;#39;) #=&amp;gt; a: aaa, b: BBB keyword_argument.foo(a: &amp;#39;aaa&amp;#39;) #=&amp;gt; a: aaa, b: bbb keyword_argument.foo #=&amp;gt; .</description>
    </item>
    
    <item>
      <title>Ruby Gold 認定試験 Ver 3 への道 その3</title>
      <link>https://kkawazoe.github.io/blog/2022/11/25/road-to-ruby-gold-ver-3-part3/</link>
      <pubDate>Fri, 25 Nov 2022 12:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2022/11/25/road-to-ruby-gold-ver-3-part3/</guid>
      <description>Ruby Gold 認定試験の Ver 3 の勉強時に学んだことを備忘録として残しておく
[前回までの記事]
Ruby Gold 認定試験 Ver 3 への道 Ruby Gold 認定試験 Ver 3 への道 その2 環境 ruby: 3.1.2 public_send メソッド Object#public_send メソッドは private メソッドを呼び出せない
private_send メソッドは存在しない ※private メソッドを 呼び出す場合は Object#send or BasicObject#__send__ メソッドを使用する
class PublicTest def public_method puts &amp;#39;call public methods&amp;#39; end private def private_method puts &amp;#39;call private methods&amp;#39; end end test = PublicTest.new test.public_method test.private_method #=&amp;gt; call public methods #=&amp;gt; public_send.rb:17:in `&amp;lt;main&amp;gt;&amp;#39;: private method `private_method&amp;#39; called for #&amp;lt;PublicTest:0x00000001046769e8&amp;gt; (NoMethodError) #=&amp;gt; test.</description>
    </item>
    
    <item>
      <title>Ruby Gold 認定試験 Ver 3 への道 その2</title>
      <link>https://kkawazoe.github.io/blog/2022/11/24/road-to-ruby-gold-ver-3-part2/</link>
      <pubDate>Thu, 24 Nov 2022 12:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2022/11/24/road-to-ruby-gold-ver-3-part2/</guid>
      <description>Ruby Gold 認定試験の Ver 3 の勉強時に学んだことを備忘録として残しておく
[前回までの記事]
Ruby Gold 認定試験 Ver 3 への道 環境 ruby: 3.1.2 __FILE__ __FILE__ が書いてあるファイルのファイル名を表す 似たようなので $0 があるがこちらは直接実行したファイルのファイル名を表す
puts __FILE__ puts $0 require_relative &amp;#39;./file_name&amp;#39; $ ruby file_name.rb __FILE__: file_name.rb $0: file_name.rb $ ruby require_file_name.rb __FILE__: file_name.rb $0: require_file_name.rb 累乗の計算 def exponentiation(n) n ** n end puts exponentiation(-1) #=&amp;gt; -1 puts exponentiation(1i) #=&amp;gt; 0.20787957635076193+0.0i 複素数 正規表現 =~ の $1 等 &amp;#39;www.ruby.co.jp&amp;#39;.match(%r(www(\.ruby\.co)(\.jp))) do |e| puts &amp;#34;match e= #{e}&amp;#34; puts &amp;#34;match e[0]= #{e[0]}&amp;#34; puts &amp;#34;match e[1]= #{e[1]}&amp;#34; puts &amp;#34;match e[2]= #{e[2]}&amp;#34; puts &amp;#34;match $0 #{$0}&amp;#34; puts &amp;#34;match $&amp;amp; #{$&amp;amp;}&amp;#34; puts &amp;#34;match $1 #{$1}&amp;#34; puts &amp;#34;match $2 #{$2}&amp;#34; end #=&amp;gt; match e= www.</description>
    </item>
    
    <item>
      <title>Ruby Gold 認定試験 Ver 3 への道</title>
      <link>https://kkawazoe.github.io/blog/2022/11/23/road-to-ruby-gold-ver-3/</link>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2022/11/23/road-to-ruby-gold-ver-3/</guid>
      <description>Ruby Gold 認定試験の Ver 3 の勉強時に学んだことを備忘録として残しておく
環境 ruby: 3.1.2 Numbered parameters _1 から始まる _1, _2 で 第一引数, 第二引数の意味となる
以下は同じ意味
h = { a: 1, b: 2, c: 3 } h.transform_values{|v| v * 2} #=&amp;gt; {:a=&amp;gt;2, :b=&amp;gt;4, :c=&amp;gt;6} h.transform_values{_1 * 2} #=&amp;gt; {:a=&amp;gt;2, :b=&amp;gt;4, :c=&amp;gt;6} h = { a: 1, b: 2, c: 3 } h.map{|key, value| [key, value * 2]}.to_h #=&amp;gt; {:a=&amp;gt;2, :b=&amp;gt;4, :c=&amp;gt;6} h = { a: 1, b: 2, c: 3 } h.</description>
    </item>
    
    <item>
      <title>FP3級への道 その7</title>
      <link>https://kkawazoe.github.io/blog/2019/07/06/road-to-fp3-part7/</link>
      <pubDate>Sat, 06 Jul 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/07/06/road-to-fp3-part7/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
[前回までの記事]
FP3級への道 FP3級への道 その2 FP3級への道 その3 FP3級への道 その4 FP3級への道 その5 FP3級への道 その6 受験結果 2019年5月 一応　FP 3級合格
勉強時間は一月半程度
後半 2週間は過去2, 3年分の過去問を中心に解いて解説および関連する分野を勉強した
FP に関しては試験受ける・受けないはともかくとして勉強自体はやって良かったと思う
2級以上を受験するかどうかは今のところ不明だがモチベーションが上がれば挑戦したい
【種目別試験結果】ファイナンシャル・プランニング技能検定 公式サイトで確認すると今回の合格率は以下
等級 学科/実技 試験科目 合格率 3級 学科 42.76％ 3級 実技 個人資産相談業務 54.35％ 大体例年通りくらいの合格率だったらしい</description>
    </item>
    
    <item>
      <title>FP3級への道 その6</title>
      <link>https://kkawazoe.github.io/blog/2019/04/30/road-to-fp3-part6/</link>
      <pubDate>Tue, 30 Apr 2019 00:00:19 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/30/road-to-fp3-part6/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
[前回までの記事]
FP3級への道 FP3級への道 その2 FP3級への道 その3 FP3級への道 その4 FP3級への道 その5 金融資産運用 債権 債権の利回り 直接利回り
投資金額(購入価格)に対する毎年の利息収入の割合
$$ 直接利回り(\%) = \frac{表面利率}{購入価格} \times 100 $$
$$ 直接利回り(\%) = \frac{表面利率}{購入価格} \times 100 $$
例えば、表面利率1%の債権を102万円で購入した場合(小数点以下第3位を四捨五入)
$$ \frac{1%}{102円} \times 100 ≒ 0.98% $$
応募者利回り
債権の発行時に購入し、償還まで所有した場合の利回り
$$ 応募者利回り(\%) = \frac{表面利率 + \frac{額面(100円) - 発行価格}{償還期限(年)}}{発行価格} \times 100 $$
例えば、表面利率1%、発行価格98円、償還期限5年の債権を購入した場合(小数点以下第3位を四捨五入)
$$ \frac{1% + \frac{100円 - 98円}{5年}}{98円} \times 100 ≒ 1.43% $$
最終利回り
既に発行されている債権を時価で購入し、償還まで所有した場合の利回り
$$ 最終利回り(\%) = \frac{表面利率 + \frac{額面(100円) - 購入価格}{残存年数(年)}}{購入価格} \times 100 $$</description>
    </item>
    
    <item>
      <title>FP3級への道 その5</title>
      <link>https://kkawazoe.github.io/blog/2019/04/26/road-to-fp3-part5/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/26/road-to-fp3-part5/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
[前回までの記事]
FP3級への道 FP3級への道 その2 FP3級への道 その3 FP3級への道 その4 金融資産運用 株式 株式投資に用いる指標 $$ PER(倍) = \frac{株価}{一株当たりの純利益(EPS)} $$
※PER が低い銘柄は 割安 、高い銘柄は割高
$$ PBR(倍) = \frac{株価}{一株当たりの純資産(BPS)} $$
※PBR が低い(1倍に近い)銘柄は 割安 、高い銘柄は割高
$$ ROE(\%) = \frac{税引後当期純利益}{自己資本(純資産)} \times 100 $$
$$ 配当利回り(\%) = \frac{一株当たりの配当金}{株価} \times 100 $$
$$ 配当性向(\%) = \frac{配当金総額}{税引後当期純利益} \times 100 $$
$$ 自己資本比率(\%) = \frac{自己資本(純資産)}{総資産(負債 + 純資産)} \times 100 $$
参考にした教本 上記内容は以下の教本の内容を参考にしてます
2018-2019年版　みんなが欲しかった！　FPの問題集3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ </description>
    </item>
    
    <item>
      <title>FP3級への道 その4</title>
      <link>https://kkawazoe.github.io/blog/2019/04/25/road-to-fp3-part4/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/25/road-to-fp3-part4/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
[前回までの記事]
FP3級への道 FP3級への道 その2 FP3級への道 その3 リスクマネジメント 火災保険 補償の範囲 損害 住宅火災保険 住宅総合保険 火災、落雷、爆発、破裂
風災、雹災、雪災 ◯ ◯ 水害(水災) × ◯ 給排水設備事故による水漏れ × ◯ 盗難 × ◯ 外部からの落下、飛来、衝突 × ◯ 持出家財の損害 × ◯ 地震、噴火、津波 × × 傷害保険 主な傷害保険 普通傷害保険 国内外を問わず、日常生活で起こる傷害を補償する保険
※病気、細菌性食中毒、自殺、地震、噴火、津波を原因とする傷害は対象外
=&amp;gt; 1つの契約で家族全員が補償される「家族傷害保険」もある 交通事故傷害保険 国内外で起きた交通事故、建物や乗り物の火災などによる傷害を保証する保険
=&amp;gt; 1つの契約で家族全員が補償される「ファミリー交通傷害保険」もある 国内旅行傷害保険 国内旅行中の傷害を補償する保険
※細菌性食中毒は保証の対象だが、地震などによる傷害は対象外 海外旅行傷害保険 海外旅行中(家を出てから帰宅するまで)の傷害を補償する保険
※細菌性食中毒、地震、噴火、津波による傷害も補償の対象 参考にした教本 上記内容は以下の教本の内容を参考にしてます
2018-2019年版　みんなが欲しかった！　FPの問題集3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ </description>
    </item>
    
    <item>
      <title>FP3級への道 その3</title>
      <link>https://kkawazoe.github.io/blog/2019/04/24/road-to-fp3-part3/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/24/road-to-fp3-part3/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
[前回までの記事]
FP3級への道 FP3級への道 その2 リスクマネジメント 生命保険と税金 生命保険金を受け取った時の税金 契約や、被保険者、受取人が誰かによって課される税金が異なる
[死亡保険金の場合]
契約者 被保険者 受取人 税金 A A B 相続税 A B A 所得税(一時所得)
住民税 A B C 贈与税 [満期保険金の場合]
契約者 被保険者 受取人 税金 A 誰でも A 所得税(一時所得)
住民税 A 誰でも B 贈与税 [非課税となる保険金や給付金]
入院給付金 高度障害保険金 手術給付金 特定疾病保険金 リビングニーズ特約保険金 等
参考にした教本 上記内容は以下の教本の内容を参考にしてます
2018-2019年版　みんなが欲しかった！　FPの問題集3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ </description>
    </item>
    
    <item>
      <title>FP3級への道 その2</title>
      <link>https://kkawazoe.github.io/blog/2019/04/22/road-to-fp3-part2/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/22/road-to-fp3-part2/</guid>
      <description>学習中に間違えやすいと思った点を備忘録として残しておく
前回の記事: FP3級への道
ライフプランニングの手法 ライフプランニングを行う際に利用するツール ライフイベント表
家族の将来のライフイベントと、それに必要な資金の額を時系列にまとめた表 キャッシュフロー表
ライフイベント表と現在の収支状況に基づいて、将来の収支状況と貯蓄残高の予想を
まとめた表 個人バランスシート
一定時点における資産と負債のバランスを見るための表
※[可処分所得] = [年収] - (社会保険料 + 所得税 + 住民税) 資金計画を立てる際の6つの係数 終価係数 現在の金額を複利で運用した場合の、一定期間後の金額を求める場合に用いる係数
例. 100万円を年利3%で運用した場合の7年後の金額はいくらか？
現価係数 一定期間後に一定金額に達するために必要な原本を求めるのに用いる係数
例. 年利3%で7年後に100万円を用意するためには、元本がいくら必要になるか？
年金終価係数 毎年一定金額を積み立てた場合の、一定期間後の元利合計を求める場合に用いる係数
例. 年利3%、毎年10万円を7年後の金額はいくらか？
減債基金係数 一定期間後に一定金額を用意するための、毎年の積立額を計算するための係数
例. 年利3%、７年後に100万円を用意するためには毎年いくら積み立てる必要があるか？
資本回収係数 現在の一定金額を一定期間で取り崩した場合の、毎年の受取金額を計算するための係数
例. 100万円を年利2%で運用しながら7年噛んで取り崩した場合の毎年の受取金額はいくら？
年金現価係数 将来の一定期間に渡って、一定額を受け取るために必要な元本を計算するための係数
例. 7年間に渡って、10万円ずつ受け取りたい
年利3%とした場合、必要な元本はいくらか？
終価係数と年金終価係数の違い 終価係数は、現在の金額を複利で運用した場合の金額を求めるための係数
=&amp;gt; 定期預金のイメージ
年金終価係数は、毎年一定金額を積み立てた場合の一定期間後の元利合計を求めるための係数
=&amp;gt; 積立定期預金のイメージ
減債基金係数と資本回収係数の違い 減債基金係数は毎年の積立額を求めるための係数
資本回収係数は毎年の受取金額を求めるための係数
現価係数はと年金現価係数の違い 現価係数は一定金額に達するために必要な原本を求めるための係数
年金現価係数は一定額を受け取るために必要な元本を求めるための係数
参考にした教本 上記内容は以下の教本の内容を参考にしてます
2018-2019年版　みんなが欲しかった！　FPの問題集3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ </description>
    </item>
    
    <item>
      <title>AWS 認定ソリューションアーキテクト - アソシエイトへの道</title>
      <link>https://kkawazoe.github.io/blog/2019/04/19/road-to-aws-certified-solutions-architect-associate/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/19/road-to-aws-certified-solutions-architect-associate/</guid>
      <description>試験概要 詳細は、試験ガイド(試験概要 の「試験ガイドのダウンロード」を参照)
受験料 15,000 円 (日本語版/税別)
出題範囲 分野 試験に占める 割合 分野 1: 回復性の高いアーキテクチャを設計する 34% 分野 2: パフォーマンスに優れたアーキテクチャを定義する 24% 分野 3: セキュアなアプリケーションおよびアーキテクチャを規定する 26% 分野 4: コスト最適化アーキテクチャを設計する 10% 分野 5: オペレーショナルエクセレンスを備えたアーキテクチャを定義する 6% 合計 100% 出題範囲詳細 分野 1: 回復性の高いアーキテクチャを設計する 1.1 信頼性と回復性の高いストレージを選択する 1.2 AWS サービスを使用した分離機構を設計する方法を定義する 1.3 多層アーキテクチャソリューションを設計する方法を定義する 1.4 可用性またはフォルトトレラント性 (あるいはその両方) が高いアーキテクチャを設計する方法を定義する 分野 2: パフォーマンスに優れたアーキテクチャを定義する 2.1 パフォーマンスの高いストレージとデータベースを選択する 2.2 キャッシュを使用してパフォーマンスを向上させる 2.3 伸縮性と拡張性を備えたソリューションを設計する 分野 3: セキュアなアプリケーションおよびアーキテクチャを規定する 3.1 アプリケーション層をセキュリティ保護する方法を定義する 3.2 データをセキュリティ保護する方法を定義する 3.3 単一の VPC アプリケーション用のネットワークインフラストラクチャーを定義する 分野 4: コスト最適化アーキテクチャを設計する 4.</description>
    </item>
    
    <item>
      <title>FP3級への道</title>
      <link>https://kkawazoe.github.io/blog/2019/03/11/road-to-fp3/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/03/11/road-to-fp3/</guid>
      <description>ここ最近今まで縁のなかった確定申告や高額医療制度のお世話になることがあった 上記のこともあり知識として必要だと感じため、学習しその記録を残しておく
受験する科目 学科 FP 協会・金融財政事情研究会で共通 実技 ※難易度的には FP 協会の「資産設計提案業務」が初心者には易しいらしい FP 協会 資産設計提案業務 金融財政事情研究会 個人資産相談業務 ※今回受験 保険顧客資産相談業務 使用する教材 今回使用する教材は以下
2018-2019年版　みんなが欲しかった！　FPの教科書3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ 他の人の評価等を確認する限り、これ１冊でもいけそう 必要があれば追加で購入する とりあえず、5月の受験を目指す
2019/03/26 追記 試験用の電卓を購入
CANON HS-1220TUG 実務電卓 12桁楽天市場で購入Amazonで購入by カエレバ こっちと迷ったが現状だとあまり必要なさそうなので安さで選択上位の級で必要になれば購入する
シャープ EL-N942-X 実務電卓 12桁楽天市場で購入Amazonで購入by カエレバ 2019/04/15 追記 問題集として追加で以下を購入 ※教本だけだと習熟度がわからないため
2018-2019年版　みんなが欲しかった！　FPの問題集3級
滝澤ななみ TAC 2018年05月22日
売り上げランキング : 楽天ブックスで購入Amazonで購入 by ヨメレバ </description>
    </item>
    
  </channel>
</rss>

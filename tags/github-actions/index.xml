<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub Actions on Note To Self ~One Step At A Time~</title><link>https://kkawazoe.github.io/tags/github-actions/</link><description>Recent content in GitHub Actions on Note To Self ~One Step At A Time~</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Wed, 06 Mar 2024 12:00:00 +0900</lastBuildDate><atom:link href="https://kkawazoe.github.io/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub Actions で AWS S3 に静的ファイルのディレクトリごとデプロイする方法</title><link>https://kkawazoe.github.io/blog/2024/03/06/how-to-deploy-a-whole-directory-of-static-files-to-aws-s3-with-github-actions/</link><pubDate>Wed, 06 Mar 2024 12:00:00 +0900</pubDate><guid>https://kkawazoe.github.io/blog/2024/03/06/how-to-deploy-a-whole-directory-of-static-files-to-aws-s3-with-github-actions/</guid><description>GitHub Actions で AWS S3 に静的ファイルのディレクトリごとデプロイする方法を備忘録として残しておく
事前準備 GitHub Actions 用の IAM ユーザを作成 GitHub の Environments に上記 IAM ユーザのシークレットを登録 Environments &amp;gt; Environment Secrets S3 のバケットを作成（ホスティングする場合は公開設定にする） S3 のバケット名はグローバルでユニークにする必要がある 公式ドキュメント 前提 S3 のバケットは作成済 Package Manager は npm を使用(yarn でも可) npm build で dist フォルダ配下にデプロイ資産が作成される 実際のコード name: cd-dev on: push: branches: - &amp;#34;develop&amp;#34; workflow_dispatch: jobs: build-deploy: runs-on: ubuntu-latest environment: develop steps: - name: Checkout uses: actions/checkout@v4 # ① - uses: actions/setup-node@v4 with: node-version: 20 cache: &amp;#39;npm&amp;#39; cache-dependency-path: ${{ github.</description></item><item><title>Hugo と GitHub Pages の構成で自動デプロイを行う方法</title><link>https://kkawazoe.github.io/blog/2022/12/17/how-to-auto-deploy-configure-hugo-and-github-pages/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0900</pubDate><guid>https://kkawazoe.github.io/blog/2022/12/17/how-to-auto-deploy-configure-hugo-and-github-pages/</guid><description>元々バッチを使用して手動でデプロイを行っていたが、自動デプロイする方法がないか調査を行った
その結果を備忘録として残しておく
前提 [構成]
Hugo + GitHub Pages(master ブランチが対象)
※source ブランチを Hugo で変換して master ブランチに静的サイト用の資産を配置する Hugo テーマは submodule として取り込み 実際のコード GitHub Actions を使用する
リポジトリ直下に .github/workflows フォルダを作成して配下に yml ファイルを配置することで GitHub Actions が登録される
※ source ブランチの push をトリガーに自動デプロイを行う
source ブランチをチェックアウト Hugo(Docker) を使用して、静的サイト用の資産を作成 master ブランチに push して GitHub Pages にデプロイする name: Deploy on: push: branches: - source # Target Branch Name jobs: deploy: runs-on: ubuntu-22.04 steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Google Apps Script on Note To Self ~One Step At A Time~</title><link>https://kkawazoe.github.io/tags/google-apps-script/</link><description>Recent content in Google Apps Script on Note To Self ~One Step At A Time~</description><generator>Hugo -- gohugo.io</generator><language>jp</language><lastBuildDate>Tue, 05 Nov 2024 09:00:00 +0900</lastBuildDate><atom:link href="https://kkawazoe.github.io/tags/google-apps-script/index.xml" rel="self" type="application/rss+xml"/><item><title>DMARC Reports を自前で集計する方法</title><link>https://kkawazoe.github.io/blog/2024/11/05/how-to-compile-dmarc-reports-on-your-own/</link><pubDate>Tue, 05 Nov 2024 09:00:00 +0900</pubDate><guid>https://kkawazoe.github.io/blog/2024/11/05/how-to-compile-dmarc-reports-on-your-own/</guid><description>DMARC Reports を自前で集計する方法を備忘録として残しておく
方法 GAS(Google Apps Script) を使用して集約する
新規で Spread Sheet を作成 「拡張機能」&amp;gt;「Apps Script」を選択 「ファイル」&amp;gt;「コード.gs」のデフォルトで記載されているソースを削除して以下を貼り付ける let today = new Date(); let targetDate = new Date(today); let nextDate = new Date(today); targetDate.setDate(today.getDate() - 1); nextDate.setDate(targetDate.getDate() + 1); const folderId = &amp;#39;1yGIkRYvB0ZQ3TZLLXKDmmguAH8qEJ8yV&amp;#39;; // レポートファイルを保存する親フォルダIDを指定 const sheetId = &amp;#39;10E1mo0JB8D60i2JN-JN8CfOnWQhcCKBA9Nq0iua4fLE&amp;#39;; // レポートを出力するスプレッドシートIDを指定 // 実行日の前日のメールを検索 // DMARC レポートを取得できる検索条件を指定する const query = &amp;#39;From:noreply-dmarc-support@google.com after:&amp;#39; + Utilities.formatDate(targetDate, Session.getScriptTimeZone(), &amp;#39;yyyy/MM/dd&amp;#39;) + &amp;#39; before:&amp;#39; + Utilities.formatDate(nextDate, Session.getScriptTimeZone(), &amp;#39;yyyy/MM/dd&amp;#39;); function executeAll(){ saveAttachmentsFromEmails(); parseDMARCReports(); calculateAndAppendHeaderFromTotals(); } function saveAttachmentsFromEmails() { // 日付のフォーマットをYYYYMMDDに変換 let formattedDate = Utilities.</description></item><item><title>Google Apps Script で Gmail から 特定条件のスレッドを検索しメールを取り出す</title><link>https://kkawazoe.github.io/blog/2020/03/19/use-gas-to-search-for-gmail-and-retrieve-emails/</link><pubDate>Thu, 19 Mar 2020 15:25:56 +0900</pubDate><guid>https://kkawazoe.github.io/blog/2020/03/19/use-gas-to-search-for-gmail-and-retrieve-emails/</guid><description>実際のソース function searchContactMail() { /* Gmail から件名が「noreply」のスレッドを検索して内容を取り出す */ var strTerms = &amp;#39;noreply&amp;#39;; var myThreads = GmailApp.search(strTerms, 0, 100); var myMsgs = GmailApp.getMessagesForThreads(myThreads); //二次元配列 var contents = []; /* 各メールの内容を取り出す */ for (var i = 0; i &amp;lt; myMsgs.length; i++) { for (var j = 0; j &amp;lt; myMsgs[i].length; j++) { var data = myMsgs[i][j].getTo(); if (data !== null) { contents.push([data]); } } } /* スプレッドシートのシート「output」に出力 */ if (myMsgs.length &amp;gt; 0) { var mySheet = SpreadsheetApp.</description></item></channel></rss>
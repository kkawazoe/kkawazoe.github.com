<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on Note To Self ~One Step At A Time~</title>
    <link>https://kkawazoe.github.io/tags/tool/</link>
    <description>Recent content in Tool on Note To Self ~One Step At A Time~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <lastBuildDate>Sun, 28 Apr 2019 00:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://kkawazoe.github.io/tags/tool/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Excel でテスト用シートを自動生成するツールを作成する</title>
      <link>https://kkawazoe.github.io/blog/2019/04/28/auto_generate_test_sheet_tool_with_excel/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/28/auto_generate_test_sheet_tool_with_excel/</guid>
      <description>Excel でテスト用シートを自動生成するツールを作成する 経緯 結合テストなのでエビデンスを残しておく必要がありテスト項目ごとにシートを分ける必要があった
テスト項目が多い場合手作業で シート作成 =&amp;gt; シート名変更をするのは手間だったため
ツール化をすることにした
使用方法  「パラメータ」シートにて以下を指定する
[設定項目]
 シート数: 作成するシート数 表示倍率: 作成するシートの表示倍率 シート作成後ワークグループ設定: チェックをつけるとシートを作成後にワークグループ(各シートが選択状態)になる  「パラメータ」シートの「実行」ボタンを押下する
  実際のコード Rem Attribute VBA_ModuleType=VBAModule Option VBASupport 1 Sub ExecuteButtonClick() Dim ws As Worksheet Dim wsArray() As String Dim chkFlg As Long &#39;ワークシートの初期化 For Each ws In Worksheets &#39;ワークシート名が&amp;quot;パラメータ&amp;quot;以外の場合 If ws.Name &amp;lt;&amp;gt; &amp;quot;パラメータ&amp;quot; Then Application.DisplayAlerts = False ws.Delete Application.DisplayAlerts = True End If Next ws &#39;チェックボックスの値を取得 chkFlg = Worksheets(&amp;quot;パラメータ&amp;quot;).</description>
    </item>
    
    <item>
      <title>Hugo に数式を挿入する</title>
      <link>https://kkawazoe.github.io/blog/2019/04/27/insert_formula_into_hugo/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/04/27/insert_formula_into_hugo/</guid>
      <description>Hugo に数式を挿入する 経緯 Hugo で運用しているサイトに数式を埋め込む必要があり
調査した結果を備忘録として残しておく
手順 参考 と同じく Mathjax を使用して実現する
 partials フォルダ配下に以下のファイルを作成する
CDN で提供されている最新の MathJax.js の URL は、cdnjs.com で確認する
[mathjax_support.html]
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; async src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]], displayMath: [[&#39;$$&#39;,&#39;$$&#39;]], processEscapes: true, processEnvironments: true, skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], TeX: { equationNumbers: { autoNumber: &amp;quot;AMS&amp;quot; }, extensions: [&amp;quot;AMSmath.js&amp;quot;, &amp;quot;AMSsymbols.js&amp;quot;] } } }); MathJax.Hub.Queue(function() { // Fix &amp;lt;code&amp;gt; tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown.</description>
    </item>
    
    <item>
      <title>Slack &#43; Todoist &#43; Integromat でタスク管理 その２</title>
      <link>https://kkawazoe.github.io/blog/2019/03/28/manage-task-with-slack-and-todoist-and-integromat-2/</link>
      <pubDate>Thu, 28 Mar 2019 12:09:59 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/03/28/manage-task-with-slack-and-todoist-and-integromat-2/</guid>
      <description>前回の残りTODO operation を使いすぎなためAPIの戻り値を配列化してメッセージを構築するようにする  手順 前回構築した API と Slack の処理の間に以下の処理を追加する
 「スパナ」アイコンを押下後「JSON」を選択して以下を指定
 「Parse JSON」  「Data structure」  「Add data structure」  「Specification」  「Generate」を押下して API の戻り値を貼り付けて生成    「JSON string」  「Data」を指定    「スパナ」アイコンを押下後「Flow Control」を選択して以下を指定
 「Array aggregator」  「Source Module」  手順１ で作成したJSON  「Target structure type」  「Custom」を指定  「Aggregated fields」  必要な項目を指定    前回作成した slack の Text を以下のように修正
map() で 「content」の内容を配列で取得後 join() で改行および空白を追加する。</description>
    </item>
    
    <item>
      <title>Slack &#43; Todoist &#43; Integromat でタスク管理 その１</title>
      <link>https://kkawazoe.github.io/blog/2019/03/25/manage-task-with-slack-and-todoist-and-integromat/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/03/25/manage-task-with-slack-and-todoist-and-integromat/</guid>
      <description>したいこと 日々のタスクを管理したいというよりも忘れがちな〇月に契約更新とかの数か月、数年先のタスクを管理したい
 タスク管理  完了/未完了を切り替え 期日を指定  リマインダー機能  昨日完了したタスク 今日期日のタスク 上記以外のタスク   今回使用するツール  タスク管理
シンプルで管理しやすい todoist を使用 リマインダー機能
slack の channel への通知を使用  google calendar  リマインダーが直前になる  todoist と連携可能だが期日指定なしが連携されない   integromat  サイトが英語のみ    integromat での todoist について integromat から使用できる todoist の 「Search for a task」では以下の項目しか返ってこないため要件を満たせない
 足りない項目  サブタスクかどうか? 期限の情報   [OUTPUT] Bundle 1: (Collection) Task ID: タスクID User ID: ユーザID Project ID: プロジェクトID Content: 内容 Deleted: 削除されているかどうか(true/false) Archived: アーカイブされているかどうか(true/false) Completed: 完了されているかどうか(true/false) The ID of the assigned user: アサインされているユーザID Date created: 作成日時 LabelsArray ラベル配列  そのため、todoist api を叩くことで実装する</description>
    </item>
    
    <item>
      <title>Microsoft Edge Developer(旧Modern IE)でhostsファイルを設定する方法</title>
      <link>https://kkawazoe.github.io/blog/2019/03/19/config-hosts-file-for-microsoft-edge-developer/</link>
      <pubDate>Tue, 19 Mar 2019 23:35:30 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/03/19/config-hosts-file-for-microsoft-edge-developer/</guid>
      <description>経緯 普段 Mac にて開発を行っているが動作端末は Windows であることが多い。
そのため、表題のツールを使用することがあるがその際に Mac 上の hosts ファイルと同様の設定をしたい場合があり苦労したため備忘録として残しておく。
Microsoft Edge Developer(旧Modern IE)について ダウンロードは以下から行う。
ダウンロードページの「Virtual Machines」より「Virtual machine」と「platform」を選択してダウンロードする。
手順 hostsファイルの権限変更 Microsoft Edge Developer 上で以下を行う。
「C:/Windows/System32/drivers/etc」に hosts ファイルがある。
そのファイルを右クリック&amp;gt;Properties&amp;gt;Security&amp;gt;Editボタンで、 Users の権限に全部チェックを入れる。
Mac の hosts ファイルを複製 Mac の hosts ファイルは「/private/etc/hosts」にあるので、それを前述のファイルに中身をコピーする。
※hosts ファイルのループバックアドレスは固定のホスト側のIPアドレスに置き換えて記述すること。
Rails での確認の際の注意点 確認作業を Rails で行う場合には追加で以下の作業を行う
IEの場合  サーバの起動の際に以下のコマンドで行う
bundle exec rails s -b 0.0.0.0   インターネットオプションのLocal intranetに「localhost:3000」を登録  Edgeの場合  サーバの起動の際に以下のコマンドで行う  bundle exec rails s -b 0.</description>
    </item>
    
    <item>
      <title>Rambox で ChatWork の未読メッセージを通知する</title>
      <link>https://kkawazoe.github.io/blog/2019/02/28/unread-chatwork-notice-with-rambox/</link>
      <pubDate>Thu, 28 Feb 2019 12:00:00 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/02/28/unread-chatwork-notice-with-rambox/</guid>
      <description>Rambox で ChatWork の未読メッセージを通知する 確認環境  Windows10 Rambox: 0.6.3  経緯 普段、 仕事で Chatwork や Slack を使用しているが別々のアプリを切り替えるのが手間だったためまとめて管理できるツールがないか調査した。
候補  Franz Station Rambox  Franz, Station だと ChatWork で PDF ファイルのプレビューを表示した際にダウンロード用のダイアログが表示されるため
「保存」 =&amp;gt; 「PDF を開く」の手間が発生してしまうため Rambox に決定
Rambox の ChatWork の挙動 Rambox で ChatWork をサービスとして追加した場合自分にメンションがついているメッセージの場合は以下のようにバッジと未読数が表示される
 Rambox バッジおよび未読数   しかし、自分にメンションがついていないメッセージについてはバッジおよび未読数は表示されないため見逃してしまう
対処方法 Rambox のサービス設定画面でカスタムコードを使用して対応する
※未読数(未読のあるルーム数) アプリ版 ChatWork と同じ挙動
 Rambox サービス設定画面   実際のコード [Custom Code]
function checkUnread() { const elements = document.</description>
    </item>
    
    <item>
      <title>Visual Studio Code で Markdown PDF を使用してPDF出力する際に任意の場所で改行させる</title>
      <link>https://kkawazoe.github.io/blog/2019/02/20/markdown-pdf-page-break/</link>
      <pubDate>Wed, 20 Feb 2019 00:24:14 +0900</pubDate>
      
      <guid>https://kkawazoe.github.io/blog/2019/02/20/markdown-pdf-page-break/</guid>
      <description> Visual Studio Code で Markdown PDF を使用してPDF出力する際に任意の場所で改行させる方法 経緯 普段、 VS Code を使用しておりちょっとしたメモや資料は Markdown を使用して作成している。
資料を共有をする場合に拡張機能である Markdown PDF を使用しているが出力後のPDFで改ページが微妙な場所でされてしまったため任意の場所で改ページできないか調査した。
情報元 Markdown PDF の「Page Break」の項目に記載あり
実際のコード # h1 ## h2 ### h3 &amp;lt;!-- 改行させたい位置 --&amp;gt; &amp;lt;div class=&amp;quot;page&amp;quot;/&amp;gt; # h1 ## h2 ### h3  </description>
    </item>
    
  </channel>
</rss>